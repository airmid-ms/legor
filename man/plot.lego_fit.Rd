% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Plot_legor.R
\name{plot.lego_fit}
\alias{plot.lego_fit}
\title{Plot Lego Fit Model}
\usage{
\method{plot}{lego_fit}(x, pieces_grid = pretty(x$data$pieces, n = 200), ...)
}
\arguments{
\item{x}{An object of class \code{"lego_fit"}, outputted from the \code{\link{fit}} function.}

\item{pieces_grid}{A numeric vector specifying the grid of piece counts over which to calculate
predicted values for the fitted model. Defaults to \code{pretty(x$data$pieces, n = 200)}. This
is used to create the smooth fitted line.}

\item{...}{Catches the unused arguments to \code{ggplot}.}
}
\value{
A \code{ggplot} object showing the scatter plot of the data, the fitted model,
and labels for the top three most expensive lego sets.
}
\description{
Makes a plot for the fitted Lego model such as a scatter plot of the data, with a line representing
the fitted model, and labels the top three most expensive lego sets.
}
\details{
This function creates a plot to visualize the relationship between number of lego pieces
and the US retail price, overlaid with fitted model. The top three most expensive lego sets are
also highlighted in the plot by labels of their names.

The fitted line is created by the model specified in \code{x$fit_type}. Supported models
include linear regression (\code{"lm"}), LOESS (\code{"loess"}), and polynomial regression (\code{"polynomial"}).
}
\examples{
model <- fit(lego_data, fit_type = "lm")
plot(model)

model2 <- fit(lego_data, fit_type = "loess")
plot(model2)

model3 <- fit(lego_data, fit_type = "polynomial", polynomial_degree = 3)
plot(model3)
}
